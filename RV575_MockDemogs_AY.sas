/*********************************************************************************************************************
 PROGRAM NAME: 		   RV575 Mock Data Code          
 AUTHOR:               Adam Yates
 DATE WRITTEN:         14May2022
 REVIEWED BY:		
 DATE REVIEWED:		
 WRITTEN FOR:          RV575 
 PURPOSE:              To develop a mock data set for RedCAP output that can be used by programming team to derive SDTM data sets 
 
 OVERVIEW:             This study is designed to identify the minimal optimal dose (dose de-escalation) for ALFQ adjuvant in HIV 
 					   vaccines to maintain safety outcomes, and reduce costs of production in future vaccine development, since 
 					   production can be complex and expensive and could greatly impact vaccine supply.  Therefore, this study is 
 					   designed to evaluate outcomes of safety, tolerability and immunogenicity of three different dose levels of 
 					   ALFQ in a population of healthy adults without HIV. 
                                          
 INPUT DATA:          Not applicable  
 OUTPUT DATA:         Datalive/MockData  
 RELIES ON:          This code relies on the synthetic screening and enrollment data generated by Dr. Misti Paudel's program: 
 						/group/Stat/NEW/RV575/Processing/MockCode/RV575_Mock_MLP.sas. 
 						
 					Specifically, the output data set from the above code file is used as inputs for this program, in order to integrate
 					screening parcedures with demographic data collected after enrollment (specifically, gender and biological sex). 
 RELIED ON BY:          TBD
 SPECIAL INSTRUCTIONS:  
 
 05/14/2022: The probability distributions for demographic data are based on population proportions of the Washington DC 
 				Metropolitan Statistical Area (MSA) as detailed in the U.S 2020 Census and the department of labor statistics
 				(for occuaption groups). As the data generation is probabilistic, the data do not match identically but will match
 				in distribution. 
                        
 MODIFICATION HISTORY:  
 DATE       MODIFIER    DESCRIPTION/REASON
 ---------- ----------- -----------------------------------------------------------------------------------------------------------------
05/10/2022	AY 		Begin generating probalistic data structure
05/14/2022  AY		initialize set procedure in data step to match subject IDs.  


*******************/



/* list of demog variables and their answer structure: 

varaible name   response categories  resposne labels
gender             (0,1,2)          (male,female,transgender);
sex					(0,1,2) 		(male,female,undifferentiated);
age					(cont)			(numeric);
race				(1,2,3,4,5,6,99) (white,black or African American, Asian, AmericanIndian/Alaskan Native, Multi-racial, Native Hawaiian or other Pacific Islander,Other_specify)
raceoth				(text)				(text; )*SP:race=99;
race5				(0,1)				(no, yes)*sp:race=5
race3				(0,1)				(no, yes)*sp:race=5
race2				(0,1)				(no, yes)*sp:race=5
race1				(0,1)				(no, yes)*sp:race=5
race4				(0,1)				(no, yes)*sp:race=5
ethnic				(0,1)				(non-hispanic/latino, Hispanic/latino)
edlevel_scorres		(1,2,3,4,99)		(primary education, secondary education, undergradaute degree, graduage degree, other,specify)
eduoth				(text)				(text)*SP:edlevel_scorres=99;
occup				(1,2,3,4,5,6,7,8,9,10,11)	(business, construction/trade,education,food/retail,governemnt,health,legal,science/research,student,transportation,retired/not working)


by-answer categories:

cont:1- study age range is 18-55, with no pre-requesites or selection pressures for age groups. 
		 DC metro area median age is 37.2; 
		 (adjusting percentage for study by study population range)
		 18-20 7.7%;
		 21-24 8.0%;
		 25-34 38.3%;
		 35-44 37.2%;
		 45-54 18.9%;
	probability of participant from a given age range; for simplicity I might just make it a normal with the median at 34, stddev=2.54 based on census standard error; 
		 
binary:6
3cat:2;
multi:3
text:2

https://censusreporter.org/data/table/?table=B03002&primary_geo_id=16000US1150000&geo_ids=16000US1150000,05000US11001,31000US47900,04000US51,01000US

*/

proc format ;
value gendr 1="Male" 2="Female" 3="Transgender";
value sex 1="Male" 2="Female" 3="Undiferentiated";
value agecat 1="18-20" 2="21-24" 3="25-34" 4="35-44" 5="45-55";
value etnc 1="Non-Hispanic/Latino" 2="Hispanic/Latino";
value raceRoot 1="White" 2="Black or African American" 3="Asian" 4="American Indian/Alaska Native" 5="Multi-racial" 6="Native Hawaiian/Pacific Islander" 7="Other, Specify";
value edu 1="Primary Education" 2="Secondary Education" 3="Undergraduate Degree" 4="Graduate Degree" 99="Other,Specify";
value occupat 1="Business" 2="Constrution/Trade" 3="Education" 4="Food/Retail" 5="Government" 6=" Health" 7="Legal"
				8="Science/Research" 9="Student" 10="Transportation" 11="Retired/Not Working";
value lclsymp 1="dclpain" 2="dclitch" 3="dclindur" 4="dcleryth";
run;

libname MDdat "/group/Stat/NEW/RV575/DataLive/MockData";
libname arch "/group/Stat/NEW/RV575/DataLive/MockData/Archive";
/**********************************SECTION 1 : Demographic CRF*****************************************/
/***********A) Data generation for enrolled participants***************************************************************/
/*****Per Protocol, only enrolled participants will have demographic data collected, so demographic data is 
	only generated for those participants who have an enrollment date. 
	However, the screening procedure requires a pregnancy test be taken by women.*/
data randIDs;
set Mddat.randomization;
keep subjid randdat;
where randdat ne . ;


run;

data mddat.demogsim (drop=i raceperm1 raceperm2  raceothint);

retain subjid randdat gender biosex age agecat ethnic race raceoth race1 race2 race3 race4 race5 edlevel_scorres occup     ;
length raceoth $20;
set randids ;
call streaminit(432121);

array ageprob[5] _temporary_ (.077 .080 .383 .27 .19);/*probabilities of age group based on census data*/
array genderprob[3] _temporary_ (.47 .51 .02)   ;
/*sex is subsidiary to gender; in most cases gender male=sex male, gender female=sex female. Only for transgender or undifferentiated should there be 
		a difference between gender and sex.
one way to go about this may be to have an if statement only for transgender to make the initial sex be a uniform probability. 
undifferentiated will be highly uncommon, but could be a 1% probability (just a wag) that any non-trans gender may have a sex of cat 3. */
*array sexprob[3] _temporary_ ();
array sexgendif [2] _temporary_ (.95 .05);/*sets up a 5% probability of sex being different than that of gender. This encapsulates individuals that 
		identify as 'transgender', as transgender status implies alternate identification from biological sex. Note this also includes undifferentiated as well.
		The difference between the two is manifest by specifying 'if gender in (3) to establish the probabilistic assignment of trans directionality.
		
		The logic is as follows: 
		sexgendif returns (1,2) with 95% being 1, and 5% being 2-->
			if gender=(trans) then biosex=[random number between 3 and 4]-->
				if biosex=1, then biosex=[what participant selection for gender](assures majority of gender and sex agreement)--> 
				if biosex=2, then biosex=[undifferentiated]-->
				if biosex>3.51(the midpoint in the uniform distribution) then biosex=Female-->
				if 3<biosex<=3.51 (less than the midpoint) then biosex=Male. 
		
		Assignments of (3.51) as the cutoff as well as the ordering of male and female is etirely arbitrary.*/
array ethnicp [2] _temporary_ (.889 .111);/*DC area population praportion 88.9% not hispanic or latino, 11.1% yes. This will be used 
											as a root for racial categories since proportions differ based on hisp/lat assignment.*/
array nonHSLatRace [7] _temporary_ ( .408 .495 .044 .002 .032  .0 .019 );/*race:1=white,2=black/aa,3=asian,4=am.indian/alaskanative,5=multi-race,6=native hawaiian/pacificIslander, 7=other*/
array HSlatRace [7] _temporary_ (.39 .08 .01 .02 .11 0 .39 );/*race cagegories for hispanic/latino based on DC demographics. Note that hispanic/latino is 11.1%
													of the population, which serves as our selection category. The race category then needs to add up to a probability of 1
													so these numbers reflect the proportional scale to 100%). */
array racemult [5] _temporary_ (.40 .30 .20 .05 .05);
array edudist [5] _temporary_ (.08 .17 .16 .25 .34);
array occdist [11] _temporary_ (0.28 0.08 0.054 0.127 0.114 0.072 0.0196 0.0182 0.089 0.047 0.089);
do i=1 to 60;

	/*gender*/
	gender=rand("Table", of genderprob[*]);
/*biological sex*/
	if  gender in (3) then biosex=rand("uniform",3,4);
		else biosex=rand("table",of sexgendif[*]);
	if biosex=1 then biosex=gender;
		else if biosex=2 then biosex=3;
		if biosex>3.51 then biosex=2;
		else if 3<biosex<=3.51 then biosex=1;
	agecat= rand("Table", of ageprob[*]);
/*proliferate continuous age as a uniform probability of being any given age in the group.
		This works because the group allocation is based on the population proportion of ages*/
		if agecat=1 then age=rand("Uniform",18,20);
		else if agecat=2 then age=rand("Uniform",21,24);
		else if agecat=3 then age=rand("Uniform",25,34);
		else if agecat=4 then age=rand("Uniform",35,44);
		else if agecat=5 then age=rand("Uniform",45,55);
		age=round(age);

ethnic=rand("table",of ethnicp[*]);/*ethnic group selection based on proprtion of study area hispanic/latino vs not hispanic/latino*/
	if ethnic in (1) then
		do;
		race=rand("table", of nonHSLatRace[*]);/*probability selection of racial group based on population proportions of racial group for non-Hispanic/latino pop*/
		if race in (7) then raceothint=rand("Integer",1,5);/*specifing "other race" text categories*/
		end;
	else if ethnic in (2) then
	   do; 
	   	race=rand("table", of HSlatRace[*]);/*probability selection of racial group based on population proportions of racial group for Hispanic/latino pop*/
		if race in (7) then raceothint=rand("Integer",6,10);/*specifing "other race" text categories*/
		end;
	if race NOT in (7) then raceothint=.;
	/*raceotherint sets an integer assignment to the other,specify options, but the CRF dictionary specifies that this is a text varaible so 
		setting the text options here. Because of the gaps in the question, I'm a priori setting these to be middle eastern/east indian areas for the 
		non-hispanic groups, and south/central american and spanish for the hispanic group.*/
		/*opions 1 through 5 relate to non-hispanc*/
	if raceothint in (1) then raceoth= "Turkish";
	if raceothint in (2) then raceoth= "East Indian";
	if raceothint in (3) then raceoth= "Saudi Arabian";
	if raceothint in (4) then raceoth= "Nepalis";
	if raceothint in (5) then raceoth= "Iranian";
	/*options 6 to 10 relate to hispanic/latino*/
	if raceothint in (6) then raceoth= "Haitian";
	if raceothint in (7) then raceoth= "Philipino";
	if raceothint in (8) then raceoth= "Brazilian";
	if raceothint in (9) then raceoth= "Peruvian Mestizo";
	if raceothint in (10) then raceoth= "Spanish, from Spain";
	if raceothint in(.) then raceoth=" ";

/*multi-race groups: these are select all that apply among white black/AA,asian,american Ind/Alaska native, Native Hawaiian or other pacific islander.
*/
	if race in (5) then 
		do;
			raceperm1=rand("Integer", 1,5);
			raceperm2=rand("Integer", 1,5);
		end;	
		 if race not in (5) then 
			do; 
				raceperm1=.;
				raceperm2=.;
			end;
			
 		if race in (5) AND raceperm1=raceperm2 then raceperm1+1;/*this is a crude way of making sure they don't match up but I'm 
 			at a loss for a more sophisticated way of doing it at the moment.*/
 			
 				if raceperm1 in (1) or raceperm2 in (1) then race5=1; 			
 				  if raceperm1 in (2) or raceperm2 in (2) then race3=1; 		
 				  if raceperm1 in (3) or  raceperm2 in (3) then race2=1; 		
 				  if raceperm1 in (4) or raceperm2 in (4) then race1=1; 		
 				  if raceperm1 in (5) or raceperm2 in (5) then race4=1;
 				
 			else if race not in (5) then do;
 						race5=.;
 						race3=.;
 						race2=.;
 						race1=.;
 						race4=.;
 				end;
 	edlevel_scorres= rand("Table", of edudist[*]);
 	if edlevel_scorres in (5) then edlevel_scorres=99;
 	/*^^^please can they fix this? this varaible name bothers me so much*/
 	occup=rand("Table", of occdist [*] );	
	
	end;

	run;
	
/**************B) Generating Genders for screen failure IDs. */
	
	data scfails;
	set mddat.visitdates;
	where randdat in (.);
	
	run;
	
	data scfailsgen;
	set scfails;
	array genderprob[3] _temporary_ (.47 .51 .02)   ;
	array sexgendif [2] _temporary_ (.95 .05);
	/*gender*/
	gender=rand("Table", of genderprob[*]);
/*biological sex*/
	if  gender in (3) then biosex=rand("uniform",3,4);
		else biosex=rand("table",of sexgendif[*]);
	if biosex=1 then biosex=gender;
		else if biosex=2 then biosex=3;
		if biosex>3.51 then biosex=2;
		else if 3<biosex<=3.51 then biosex=1;
	run;
	/******************part B end***************/
	proc freq data=demogsim;
	table agecat age gender biosex gender*biosex ethnic race raceoth ethnic*race ethnic*raceoth
			gender*raceoth raceperm1*raceperm2 race1 race2 race3 race4 race5 edlevel_scorres occup;
	format gender gendr.;
	format biosex sex.;
	format agecat agecat.;
	format ethnic etnc.;
	format race raceroot.;
	format edlevel_scorres edu.;
	format occup occupat.;
	run;
	
	
/**************Section 2: Diary Card (Local)*****************************/
/*The diary card data are generated according to the deisgn outlined in the protocol. In brief, each injection should be 
	administered in alternating arms; accordingly, randomization (for the synthetic data) will be conducted for the injection at visit 0, but 
	then fixed for all subsequent injections, with the second injection set to the opposite arm as injection 1, 
	and injection 3 set to the same as injection 1. 
	Diary cards are to be completed by the participant the day of the injection and each subsequent day for 14 days. 
/******2A: Local Diary Card Assessment )*******************/
/************Variable tree:

dclinjsite-site of injection: 0,injection not administered;1,left deltoid; 2, right deltoid. 
	if NOT '0'---> dclday: days since injection. Since there are 3 injections, this will need to be linked to 
							each injection, i.e inj1_day1...inj1_day14 ; inj2_day1...inj2_day14. 
						the data will ultimately be in long form, but for the purpose of data creation it may be more prudent to 
						generate in wide form and then transform (mostly because we don't have SAS/IML).
						However, before that, I will try a double(or tripple) array structure to fill in dynamically*******/
	/*		
data diaryLCL;
array lclpain{3,14} Inject1_dclpainD1--inject1_dclpainD14 Inject2_dclpainD1--Inject2_dclpainD14 Inject3_dclpainD1--Inject3_dclpainD14;	
array 	paintndr [6] _temporary_ ( .40 .20 .15 .10 .05 .03 );					
			
do i=1 to 3;
	do j=1 to 14;
		lclpain{i,j}=rand('Poisson', of paintndr [*] );
	end;
end;

run;*/

/*expanding the subjid data sheet to multiple visits*/

data longform;
set randids;

by subjid;
visit=1;
	if last.subjid then do;
		output;
			do;
				visit+1;/*second visit*/
				output;
				visit+1;/*third visit*/
				output;
		end;
	end;


run;
/*
data longform2;
set longform;

if first.subjid then do;
		output;
	end;
			do i=1 to 4;
				lclsympnum=i;
				output;
			end;
				
if visit not in (1) then randdat=.;


run;
*/

data diaryLCLwide;
set longform;
call streaminit(432121);
retain subjid randdat visit dclpain_day1;
array lclpain{14} dclpain_Day1-dclpain_Day14 ;
array lclitch{14} dclitch_day1-dclitch_day14;
array lclindur{14} dclindur_day1-dclindur_day14;
array lclindurfnt{14} dclfrontindur_day1-dclfrontindur_day14;
array lclindurbck{14} dclbackindur_day1-dclbackindur_day14;
array lclindurcomb{14} dclindurcomb_day1-dclindurcomb_day14;

array lcleryth{14} dcleryth_day1-dcleryth_day14;
array lclerythfnt{14} dclfronteryth_day1-dclfronteryth_day14;
array lclerythbck{14} dclbackeryth_day1-dclbackeryth_day14;
array lclerythcomb{14} dclerythcomb_day1-dclerythcomb_day14;
array lclwrm{14} dclwarm_Day1-dclwarm_Day14 ;

/*induration size*/

/*transition state probabilities for symptom 'decrease' 'same' 'increase' severity*/
*array 	trans1 [3] _temporary_ (0.20 0.60 0.20 );
*array 	trans2 [3] _temporary_ (0.30 0.60 0.10 );
*array 	trans4 [3] _temporary_ (0.30 0.50 0.20 );
*array trans5 [3] _temporary_ (0.65 0.30 0.05);
*array trans6 [2] _temporary_ (0.70 0.30 );/*70%prob stay same, 30% prob increase--used for day1-->2*/
*array trans7 [2] _temporary_ (0.90 0.10 );	
*array trans8 [2] _temporary_ (0.60 0.40 );
array transdir [14] transdir1-transdir14;	
array transdirW [14] transdirW1-transdirW14;
/*options for the poisson mean can be anything. Higher means will result in a more "gaussian normal" curve. To achieve the (ideally) expected low 
symptomology I've set this to 0.5 as this produces the idea right-skew.
This may be variable though by symptom and diary index (local vs systemic) however. For example, I imagine we expect 'localized injection pain' 
to be common since everyone will be being stabbed by a needle, but the severity scale should still be around '1'. 
'Swelling/Hardness' would ideally be less common.*/ 
	
array indurocS[2] _temporary_ (0.5 0.5);/*front or back; for mild induration/erytemia*/
array indurocM [3] _temporary_ (0.4 0.4 0.2);/*front,back, or combined*/
array indurocL[3] _temporary_ (0.1 0.1 0.8);/*front,back, or combined*/


array erythS[2] _temporary_ (0.5 0.5);/*front or back; for mild induration/erytemia*/
array erythM [3] _temporary_ (0.4 0.4 0.2);/*front,back, or combined*/
array erythL[3] _temporary_ (0.1 0.1 0.8);/*front,back, or combined*/

lclpain{1}=rand('Poisson', 0.5 );
lclitch{1}=rand('Poisson',1.0);
lclindur{1}=rand('Poisson',0.7);
lcleryth{1}=rand('Poisson',0.2);
lclwrm{1}=rand('Poisson',0.3);
/*generate initial sizes for day 1*/
		if lclindur{1} in (1) then do;
				indurloc=rand('table',of indurocS[*]);
			if indurloc=1 then lclindurfnt{1}=rand('uniform',2.5,4.99);
			if indurloc=2 then lclindurbck{1}=rand('uniform',2.5,4.99);
		end;
		else if lclindur{1} in (2) then do;
				indurloc=rand('table', of indurocM [*]);
		 	if indurloc=1 then lclindurfnt{1}=rand('uniform',5.0,7.5);
			if indurloc=2 then lclindurbck{1}=rand('uniform',5.0,7.5);
			if indurloc=3 then lclindurcomb{1}=rand('uniform',7.0,10.0);
		end;
		else if lclindur{1} >=3 then do;
				indurloc=rand('table', of indurocL[*]);
			if indurloc=1 then lclindurfnt{1}=rand('uniform',10.1,13.9);
			if indurloc=2 then lclindurbck{1}=rand('uniform',10.1,13.9);		
			if indurloc=3 then lclindurcomb{1}=rand('uniform',10.1,13.9);/*grade 3 and 4 aren't defined by an upper bound so this is just my putting an uninformed bound on it. if anyone cares later it can be adjusted*/
		end;
if lclindur{1}>4 then lclindur{1}=4;
/*generating initial size and location for Erythemea*/
/*Note that the structure is identical to induration, but is generated independenty. This allows for some variance and natural probability of overlap
		but would still satisfy independence assumptions in modeling, as well as support a stocastic covariance/correlation.*/
		
if lcleryth{1} in (1) then do;
				erythloc=rand('table',of erythS[*]);
			if erythloc=1 then lclerythfnt{1}=rand('uniform',2.5,4.99);
			if erythloc=2 then lclerythbck{1}=rand('uniform',2.5,4.99);
		end;
		else if lcleryth{1} in (2) then do;
				erythloc=rand('table', of erythM [*]);
		 	if erythloc=1 then lclerythfnt{1}=rand('uniform',5.0,7.5);
			if erythloc=2 then lclerythbck{1}=rand('uniform',5.0,7.5);
			if erythloc=3 then lclerythcomb{1}=rand('uniform',7.0,10.0);
		end;
		else if lcleryth{1} >=3 then do;
				erythloc=rand('table', of erythL[*]);
			if erythloc=1 then lclerythfnt{1}=rand('uniform',10.1,13.9);
			if erythloc=2 then lclerythbck{1}=rand('uniform',10.1,13.9);		
			if erythloc=3 then lclerythcomb{1}=rand('uniform',10.1,13.9);/*grade 3 and 4 aren't defined by an upper bound so this is just my putting an uninformed bound on it. if anyone cares later it can be adjusted*/
		end;

if lcleryth{1}>4 then lcleryth{1}=4;

/*Pain*/
/*sets the probability for decrease/same/increase for each D visit
else if 2<f<=7 then transdir{f}=rand('Poisson', 0.60);
	else if 7<f<=14 then transdir{f}=rand('Poisson', 0.50);*/
	
do d=2 to 14;/*diary days 2 through 14*/
			j=d-1; /*j=previous diary day value*/
			/*transition from day 1->2*/
		if j=1 then do;
				transdir{d}=rand('Poisson', 0.40);
				if transdir{d} in (1) then lclpain{d}=lclpain{j};
			else if transdir{d} in (2) then lclpain{d}=lclpain{j}+1;
			if lclpain{d}<0 then lclpain{d}=0;/*set so lclpain{j}=0 will 
										not result in negative number*/
		end;
			
	/*transition from day j->d for days 3 through 6*/
	else if 2<d<=7 then transdir{d}=rand('Poisson', 0.60);
	else if 7<d<=14 then transdir{d}=rand('Poisson', 0.50);
	
		if transdir{d}<1 then do;/*decrease*/
		 lclpain{d}=lclpain{j}-1;/*if previous visit =1(ex:mild)*/
			if lclpain{j} in (0) then lclpain{d}=0;
				
		end;
		else if transdir{d} in (1 2  ) then do;
			 lclpain{d}=lclpain{j};
		end;
		else if transdir{d}>=3 then do;
			lclpain{d}=lclpain{j}+1; 
		end;
*if lclpain{f}>4 then lclpain{f}=4;/*<<<<<<Why does this break the code? Debug...*/
end;
/*itching*/
do e=2 to 14;/*diary days 2 through 14*/
			k=e-1; /*j=previous diary day value*/
			/*transition from day 1->2*/
			if k=1 then do;
				transdir{e}=rand('Poisson', 0.40); 
				if transdir{e} in (1) then lclitch{e}=lclitch{k};
			else if transdir{e} in (2) then lclitch{e}=lclitch{k}+1;
			if lclitch{e}<0 then lclitch{e}=0;
		end;
			
	/*transition from day j->d for days 3 through 6*/
	if 2<d<=5 then transdir{e}=rand('Poisson', 0.30);/*sets the probability for decrease/same/increase for each D visit*/
	if 5<d<=14 then transdir{e} =rand('Poisson', 0.20);
	
		if transdir{e}<1 then do;
		 lclitch{e}=lclitch{k}-1;/*if previous visit =1(ex:mild)*/
			if lclitch{k} in (0) then lclitch{e}=0;
		end;
		else if transdir{e} in (1 2 ) then do;
			 lclitch{e}=lclitch{k};
		end;
		else if transdir{e}>=3 then do;
			lclitch{e}=lclitch{k}+1; 
		end;
if lclitch{e}>4 then lclitch{e}=4;
end;

/*swelling/hardness lclindurfnt{F}
		if indurloc=2 then lclindurbck{F}
		if indurloc=3 then lclindurcomb{F}*/
/*initial induration and erythema size*/



do f=2 to 14;/*diary days 2 through 14*/
	L=f-1; /*j=previous diary day value*/
			/*transition from day 1->2*/
			
		if L=1 then do;/*code block specific to f=2 (day 2) because it needs different transition structure (no decrease)*/
			transdir{f}=rand('Poisson', 0.70); 
				if transdir{f} in (0) then do;/*stay the same/no transition*/
						lclindur{f}=lclindur{L};
				 		lclindurfnt{F}=lclindurfnt{L};
				 		lclindurbck{F}=lclindurbck{L};
				 		lclindurcomb{F}=lclindurcomb{L};
				 		
				end;
				else if transdir{f} >0 then do;/*increase*/
					lclindur{f}=lclindur{L}+1;
						if lclindur{f} in (1) then do;
							
							if indurloc=1 then lclindurfnt{f}=rand('uniform',2.5,4.99);
							if indurloc=2 then lclindurbck{f}=rand('uniform',2.5,4.99);
						end;
						else if lclindur{f} in (2) then do;
/*for simplicity I'm keeping the location the same place for now. Theortically a better approach would be to have a pull for if there are 2 combined areas or a second location if grading switches but meh*/			
		 					if indurloc=1 then lclindurfnt{f}=rand('uniform',5.0,7.5);
							if indurloc=2 then lclindurbck{f}=rand('uniform',5.0,7.5);
							if indurloc=3 then lclindurcomb{f}=rand('uniform',7.0,10.0);
						end;
						else if lclindur{f} in (3 4) then do;
			
							if indurloc=1 then lclindurfnt{f}=rand('uniform',10.1,13.9);
							if indurloc=2 then lclindurbck{f}=rand('uniform',10.1,13.9);		
							if indurloc=3 then lclindurcomb{f}=rand('uniform',10.1,13.9);/*grade 3 and 4 aren't defined by an upper bound so this is just my 
																							putting an uninformed bound on it. if anyone cares later it can be adjusted*/
						end;
				end;
				if lclindur{f}<0 then lclindur{f}=0;/*set so lclpain{L}=0 will not result in negative number*/
				if lclindur{f}>4 then lclindur{f}=4;
		end;
			
	/*transition from day j->d for days 3 through 6*/
	else if 2<f<=7 then transdir{f}=rand('Poisson', 0.60);/*sets the probability for decrease/same/increase for each D visit*/
	else if 7<f<=14 then transdir{f}=rand('Poisson', 0.50);
	
		if 2<f<=14 then do;
			if transdir{f}=0 then do;/*decreasing*/
		 		lclindur{f}=lclindur{L}-1;/*if previous visit =1(ex:mild)*/
					if lclindur{L} in (0) then lclindur{f}=0;
						if lclindur{f}=0 then do;	
							lclindurfnt{f}=.;
							lclindurbck{f}=.;
							lclindurcomb{f}=.;
						end;
						else if lclindur{f} in (1) then do;
							if indurloc=1 then lclindurfnt{f}=rand('uniform',2.5,4.99);
							if indurloc=2 then lclindurbck{f}=rand('uniform',2.5,4.99);
							if indurloc=3 then lclindurcomb{f}=rand('uniform',3.5,4.99);
						end;
						else if lclindur{f} in (2) then do;
							if indurloc=1 then lclindurfnt{f}=rand('uniform',5.0,7.5);
							if indurloc=2 then lclindurbck{f}=rand('uniform',5.0,7.5);
							if indurloc=3 then lclindurcomb{f}=rand('uniform',7.0,10.0);
					
						end;
						else if lclindur{f} in (3 ) then do;/*if its decreasing it can't be 4*/
							if indurloc=1 then lclindurfnt{f}=rand('uniform',10.1,13.9);
							if indurloc=2 then lclindurbck{f}=rand('uniform',10.1,13.9);		
							if indurloc=3 then lclindurcomb{f}=rand('uniform',10.1,13.9);
						end;
			end;
			else if transdir{f} in (1 2) then do;/*same*/
				lclindur{f}=lclindur{L};
				lclindurfnt{F}=lclindurfnt{L};
				lclindurbck{F}=lclindurbck{L};
				lclindurcomb{F}=lclindurcomb{L};
			 
			end;
			else if transdir{f} >2 then do;/*increase*/
				lclindur{f}=lclindur{L}+1; 
					if lclindur{f} in (1) then do;/*if its increasing it can't be 0*/
							if indurloc=1 then lclindurfnt{f}=rand('uniform',2.5,4.99);
							if indurloc=2 then lclindurbck{f}=rand('uniform',2.5,4.99);
							if indurloc=3 then lclindurcomb{f}=rand('uniform',3.5,4.99);
					
					end;
					else if lclindur{f} in (2) then do;
						    if indurloc=1 then lclindurfnt{f}=rand('uniform',5.0,7.5);
							if indurloc=2 then lclindurbck{f}=rand('uniform',5.0,7.5);
							if indurloc=3 then lclindurcomb{f}=rand('uniform',7.0,10.0);
					
					end;
					else if  lclindur{f} in (3 4 ) then do;/*if its decreasing it can't be 4*/
							if indurloc=1 then lclindurfnt{f}=rand('uniform',10.1,13.9);
							if indurloc=2 then lclindurbck{f}=rand('uniform',10.1,13.9);		
							if indurloc=3 then lclindurcomb{f}=rand('uniform',10.1,13.9);
			
					end;
			
			end;/*ends increase loop*/
		if lclindur{f}>4 then lclindur{f}=4;	
		end;/*ends if 2<f<14 loop*/
	
end;/*ends induration loop*/

/*redness*/

do g=2 to 14;/*diary days 2 through 14*/
			m=g-1; /*j=previous diary day value*/
			/*transition from day 1->2*/
			
		if m=1 then do;/*code block specific to m=2 (day 2) because it needs different transition structure (no decrease)*/
			transdir{g}=rand('Poisson', 0.40); 
			
				if transdir{g} in (0 1 ) then do;/*stay the same/no transition*/
						lcleryth{g}=lcleryth{m};
				 		lclerythfnt{g}=lclerythfnt{m};
				 		lclerythbck{g}=lclerythbck{m};
				 		lclerythcomb{g}=lclerythcomb{m};
				 		
				end;
				else if transdir{g} >=2 then do;/*increase*/
						
					lcleryth{g}=lcleryth{m}+1;
						if lcleryth{g} in (1) then do;
							erythloc=rand('table',of erythS[*]);
							if erythloc=1 then lclerythfnt{g}=rand('uniform',2.5,4.99);
							if erythloc=2 then lclerythbck{g}=rand('uniform',2.5,4.99);
						end;
						else if lcleryth{g} in (2) then do;
/*for simplicity I'm keeping the location the same place for now. Theortically a better approach would be to have a pull for if there are 2 combined areas or a second location if grading switches but meh*/			
		 					if erythloc=1 then lclerythfnt{g}=rand('uniform',5.0,7.5);
							if erythloc=2 then lclerythbck{g}=rand('uniform',5.0,7.5);
							if erythloc=3 then lclerythcomb{g}=rand('uniform',7.0,10.0);
						end;
						else if lcleryth{g} in (3 4) then do;
			
							if erythloc=1 then lclerythfnt{g}=rand('uniform',10.1,13.9);
							if erythloc=2 then lclerythbck{g}=rand('uniform',10.1,13.9);		
							if erythloc=3 then lclerythcomb{g}=rand('uniform',10.1,13.9);/*grade 3 and 4 aren't defined by an upper bound so this is just my 
																							putting an uninformed bound on it. if anyone cares later it can be adjusted*/
						end;
				end;
				if lcleryth{g}<0 then lcleryth{g}=0;/*set so grade=0 will not result in negative number*/
		end;
			
	/*transition from day j->d for days 3 through 7*/
	else if 2<g<=7 then transdir{g}=rand('Poisson', 0.60);/*sets the probability for decrease/same/increase for each D visit*/
	else if 7<g<=14 then transdir{g} =rand('Poisson', 0.40);
	
		if 2<g<=14 then do;
			if transdir{g}<2 then do;/*decreasing*/
		 		lcleryth{g}=lcleryth{m}-1;/*if previous visit =1(ex:mild)*/
					if lcleryth{m} in (0) then lcleryth{g}=0;
						if lcleryth{g}=0 then do;	
							lclerythfnt{g}=.;
							lclerythbck{g}=.;
							lclerythcomb{g}=.;
						end;
						else if lcleryth{g} in (1) then do;
							if erythloc=1 then lclerythfnt{g}=rand('uniform',2.5,4.99);
							if erythloc=2 then lclerythbck{g}=rand('uniform',2.5,4.99);
							if erythloc=3 then lclerythcomb{g}=rand('uniform',3.5,4.99);
						end;
						else if lcleryth{g} in (2) then do;
							if erythloc=1 then lclerythfnt{g}=rand('uniform',5.0,7.5);
							if erythloc=2 then lclerythbck{g}=rand('uniform',5.0,7.5);
							if erythloc=3 then lclerythcomb{g}=rand('uniform',7.0,10.0);
					
						end;
						else if lcleryth{g} in (3 ) then do;/*if its decreasing it can't be 4*/
							if erythloc=1 then lclerythfnt{g}=rand('uniform',10.1,13.9);
							if erythloc=2 then lclerythbck{g}=rand('uniform',10.1,13.9);		
							if erythloc=3 then lclerythcomb{g}=rand('uniform',10.1,13.9);
						end;
			end;
			else if transdir{g} in (2 3) then do;/*same*/
				lcleryth{g}=lcleryth{m};
				lclerythfnt{g}=lclerythfnt{m};
				lclerythbck{g}=lclerythbck{m};
				lclerythcomb{g}=lclerythcomb{m};
			 
			end;
			else if transdir{g} >3 then do;/*increase*/
				lcleryth{g}=lcleryth{m}+1; 
					if lcleryth{g} in (1) then do;/*if its increasing it can't be 0*/
							if erythloc=. then erythloc=rand('table',of erythS[*]);
								else erythloc=erythloc;
							if erythloc=1 then lclerythfnt{g}=rand('uniform',2.5,4.99);
							if erythloc=2 then lclerythbck{g}=rand('uniform',2.5,4.99);
							if erythloc=3 then lclerythcomb{g}=rand('uniform',3.5,4.99);
					
					end;
					else if lcleryth{g} in (2) then do;
						    if erythloc=1 then lclerythfnt{g}=rand('uniform',5.0,7.5);
							if erythloc=2 then lclerythbck{g}=rand('uniform',5.0,7.5);
							if erythloc=3 then lclerythcomb{g}=rand('uniform',7.0,10.0);
					
					end;
					else if  lcleryth{g} in (3 4 ) then do;/*if its decreasing it can't be 4*/
							if erythloc=1 then lclerythfnt{g}=rand('uniform',10.1,13.9);
							if erythloc=2 then lclerythbck{g}=rand('uniform',10.1,13.9);		
							if erythloc=3 then lclerythcomb{g}=rand('uniform',10.1,13.9);
			
					end;
			
			end;/*ends increase loop*/
			if lcleryth{g}>4 then lcleryth{g}=4;
		end;/*ends if 2<f<14 loop*/
end;/*ends erythemea loop*/
/*warm*/
do b=2 to 14;/*diary days 2 through 14*/
			w=b-1; /*j=previous diary day value*/
			/*transition from day 1->2*/
			if w=1 then do;
				transdirW{b}=rand('Poisson', 0.50); 
				if transdirW{b} in (1) then lclwrm{b}=lclwrm{w};
			else if transdirW{b} in (2) then lclwrm{b}=lclwrm{w}+1;
			if lclwrm{b}<0 then lclwrm{b}=0;
		end;
			
	/*transition from day j->d for days 3 through 6*/
	if 2<b<=5 then transdirW{b}=rand('Poisson', 0.20);/*sets the probability for decrease/same/increase for each D visit*/
	if 5<b<=14 then transdirW{b} =rand('Poisson', 0.10);
	
		if transdirW{b} <1 then do;
		 lclwrm{b}=lclwrm{w}-1;/*if previous visit =1(ex:mild)*/
			if lclwrm{w} in (0) then lclwrm{b}=0;
		end;
		else if transdirW{b} in (1 2) then do;
			 lclwrm{b}=lclwrm{w};
		end;
		else if transdirW{b} >=3 then do;
			lclwrm{b}=lclwrm{w}+1; 
		end;
	
end;
run;

proc sort data=diarylclwide;
by subjid visit;
run;

/*pain*/

proc transpose data=diarylclwide out=longt1;
  by subjid visit;
  var dclpain_day1-dclpain_day14 ;
run;

data painl;
  set longt1 (rename=(col1=dclpain));
  day=input(substr(_name_, 12), 5.);
  drop _name_;
run; 

/*itch*/
proc transpose data=diarylclwide out=longt2;
  by subjid visit;
  var dclitch_day1-dclitch_day14 ;
run;

data itchl;
  set longt2 (rename=(col1=dclitch));
  day=input(substr(_name_, 12), 5.);
  drop _name_;
run; 
/*swelling/hardness*/
proc transpose data=diarylclwide out=longt3a;
  by subjid visit;
  var dclindur_day1-dclindur_day14   ;
run;
proc transpose data=diarylclwide out=longt3b;
  by subjid visit;
  var  dclfrontindur_day1-dclfrontindur_day14  ;
run;
proc transpose data=diarylclwide out=longt3c;
  by subjid visit;
  var dclbackindur_day1-dclbackindur_day14   ;
run;
proc transpose data=diarylclwide out=longt3d;
  by subjid visit;
  var  dclindurcomb_day1-dclindurcomb_day14 ;
run;

data indurla;
  set longt3a (rename=(col1=dclindur));
  day=input(substr(_name_, 13), 5.);
  drop _name_;
run; 
data indurlb;
  set longt3b (rename=(col1=dclfrontindur));
  day=input(substr(_name_, 18), 5.);
  drop _name_;
run;
data indurlc;
  set longt3c (rename=(col1=dclbackindur));
  day=input(substr(_name_, 17), 5.);
  drop _name_;
run;
data indurld;
  set longt3d (rename=(col1=dclindurcomb));
  day=input(substr(_name_, 17), 5.);
  drop _name_;
run;
/*redness*/
	
proc transpose data=diarylclwide out=longt4a;
  by subjid visit;
  var dcleryth_day1-dcleryth_day14 ;
run;
	
proc transpose data=diarylclwide out=longt4b;
  by subjid visit;
  var dclfronteryth_day1-dclfronteryth_day14 ;
run;
	
proc transpose data=diarylclwide out=longt4c;
  by subjid visit;
  var dclbackeryth_day1-dclbackeryth_day14 ;
run;
	
proc transpose data=diarylclwide out=longt4d;
  by subjid visit;
  var dclerythcomb_day1-dclerythcomb_day14 ;
run;

data erythla;
  set longt4a (rename=(col1=dcleryth));
  day=input(substr(_name_, 13), 5.);
  drop _name_;
run; 
data erythlb;
  set longt4b (rename=(col1=dclfronteryth));
  day=input(substr(_name_, 18), 5.);
  drop _name_;
run; 
data erythlc;
  set longt4c (rename=(col1=dclbackeryth));
  day=input(substr(_name_, 17), 5.);
  drop _name_;
run; 
data erythld;
  set longt4d (rename=(col1=dclerythcomb));
  day=input(substr(_name_, 17), 5.);
  drop _name_;
run; 

proc transpose data=diarylclwide out=longt5;
  by subjid visit;
  var dclwarm_Day1-dclwarm_Day14 ;
run;

data warml;
  set longt5 (rename=(col1=dclwarm));
  day=input(substr(_name_, 12), 5.);
  drop _name_;
run; 

proc sort data=painl;by subjid visit day; run;
proc sort data=itchl;by subjid visit day; run;
proc sort data=indurla;by subjid visit day; run;
proc sort data=indurlb;by subjid visit day; run;
proc sort data=indurlc;by subjid visit day; run;
proc sort data=indurld;by subjid visit day; run;
proc sort data=erythla;by subjid visit day; run;
proc sort data=erythlb;by subjid visit day; run;
proc sort data=erythlc;by subjid visit day; run;
proc sort data=erythld;by subjid visit day; run;
proc sort data=warml;by subjid visit day;run;

data diarylng;
retain subjid visit day ;
	merge painl itchl indurla indurlb indurlc indurld erythla erythlb erythlc erythld warml;
	by subjid visit day;

run;
proc sort data=diarylng;
by visit subjid day; 
run;

proc freq data=diarylng;
by visit;
table (dclpain dclitch dclindur dcleryth dclwarm)*day/norow nopercent;
footnote ;
run;


data mddat.diaryLocal;
set diarylng;
run;

/*NOTE:08/17/22: Future iterations of changes should update the 'set' data file to reflect the archive folder in mddat as the origional dcl file was 
		moved there. Subsequent to this change the 'dclfinal' data file was renamed ith a dataset command to accomodate the programming 
		teams automatic program*/
data mddat.dclFINAL;
retain subjid visit dclvisdat dclinjsite dclday dclnoreactdata dclpain dclitch dclindur dclfrontindur dclbackindur dclindurcomb dclindurdim 
		dcleryth dclfronteryth dclbackeryth dclerythcomb dclerythdim dclwarm dclcomnt; 
set mddat.dcl;

array reactflg {7} dclpain dclitch dclindur dclindurcomb  dcleryth dclerythcomb dclwarm;
array sigdig {6} dclfrontindur dclbackindur dclindurdim dclfronteryth dclbackeryth dclerythdim;

/*adjusting the data to follow implicit skip pattern with 'dcsnoreactdata'. 
	if a day on a diary card has no reaction data to enter, the clinical will select '1' for noreactdata
		and all other variables will be skipped, resulting in blank values*/
/*iterating over an array of symptoms for any values greater than 0*/	
valchk=sum(of reactflg(*));

if valchk<1 then dclnoreactdata=1;
/*setting blanks for qualifying days*/
do i=1 to 7;
	if dclnoreactdata=1 then reactflg{i}=.;
end;

do j=1 to 6;
	sigdig{j}=round(sigdig{j},.1);
end;
	
count=0;
array miss_var {5} dclpain dclitch dclindur  dcleryth  dclwarm;
do i = 1 to 5;
if miss_var{i}=. then count+1;
else count=count;
end; 

if count<5 then dclnoreactdata=.;

drop valchk i j;

run;

/*change dclfinal=dcl dcsfinal=dcs;

data arch.dcs_17aug;
set  mddat.dcs;
run;

proc datasets library=mddat;
	
	change dclfinal=dcl ;
	
run;*/



 ods graphics /  width=8in ;
proc sgpanel data=diarylng ;
panelby  visit subjid/ novarname skipemptycells layout=lattice  sort=data  rows=6  ;
title height=14pt  "Induration Severity Grading" ;
series x=day y=dclindur / lineattrs=(color=CX708090 thickness=3);
rowaxis grid  gridattrs=(thickness=1 color=white) label="sympom severity grade" labelattrs=(size=12 weight=bold) values=(0 1 2 3 4) ; 
colaxis grid gridattrs=(thickness=1 color=white) label="diary card day" labelattrs=(size=12 weight=bold) values=(1 2 3 4 5 6 7 8 9 10 11 12 13 14 ) ;
footnote justify=right wrap "Synthetic data from iterative Poisson draws and transition matrix probabilities";
run;


/*systemic diary variables: 
Variable					Measure							indication
------------------	 	---------------------				------------------------				
dcsnoinject					injection not administered			non-injection visit dates
dcsday						diary day							range 1-14 for each day followed on card
dcstemp						oral temperature
dcstempu					temperature unit					feirenheit or celceus...confirm this is actually a choice? 
dcsnoreactdata				no systemic reactions				filled if all systemic vars are 0
dcsfatigue					fatigue,unusually tired					0-4,97
dcsheadache					headache								grade range
dcsmuscleaches				muscle aches							''
dcsjointpain					pain in joints						;;
dcsrash							rash								''
dcsrashcomnt					rash comment						optional by clinician?--see if this qualifies grade 3 in local
dcschills						chills									grade range
dcsnausea						nausea									''
dcsdizzi						dizziness			 					''
dcstookmed						medication to reduce fevor or symtoms		yes-no. BTW I strongly dislike this question--what if they have multiple symptoms? 
																				if fevor is a symptom why specifically call it out if you might not know if they 
																				took meds for it when it is lumped in with other symptom variables? 
																	**^^^Advise to change but don't hold out hope
																	
*/


data diarySyswide;
call streaminit(432121);
retain subjid randdat visit ;
set longform;
by subjid visit;
array lsltemp{14} dcstemp_Day1-dcstemp_Day14 ;/*note: vset 12*/
array lslfatig{14} dcsfatigue_day1-dcsfatigue_day14;/*note: vset 15*/
array lslhead{14} dcsheadache_day1-dcsheadache_day14;/*note: vset 16*/
array lslmusc{14} dcsmuscleaches_day1-dcsmuscleaches_day14;/*note: vset 19*/
array lsljoint{14} dcsjointpain_day1-dcsjointpain_day14;/*note: vset 17*/
array lslrash{14} dcsrash_day1-dcsrash_day14;/*note: vset 12*/
array lslchill{14} dcschills_day1-dcschills_day14;/*note: vset 14*/
array lslnaus{14} dcsnausea_day1-dcsnausea_day14;/*note: vset 14*/
array lsldizz{14} dcsdizzi_day1-dcsdizzi_day14;/*note: vset 13*/
*array lslmed{14} _day1-_day14;

array 	trans1 [3] _temporary_ (0.20 0.60 0.20 );
array 	trans2 [3] _temporary_ (0.30 0.60 0.10 );
array 	trans4 [3] _temporary_ (0.30 0.50 0.20 );
array trans5 [3] _temporary_ (0.65 0.30 0.05);
array trans6 [2] _temporary_ (0.70 0.30 );/*70%prob stay same, 30% prob increase--used for day1-->2*/
array trans7 [2] _temporary_ (0.90 0.10 );	
array trans8 [2] _temporary_ (0.60 0.40 );
array trans9 [3] _temporary_ (0.30 0.40 0.30);
array transdir [14] transdir1-transdir14;	

/*options for the poisson mean can be anything. Higher means will result in a more "gaussian normal" curve. To achieve the (ideally) expected low 
symptomology I've set this to 0.5 as this produces the ideal right-skew.
This may be variable though by symptom and diary index (local vs systemic) however. For example, I imagine we expect 'localized injection pain' 
to be common since everyone will be being stabbed by a needle, but the severity scale should still be around '1'. 
'Swelling/Hardness' would ideally be less common.*/ 
lslfatig{1}=rand('Poisson', 0.5 );
lslhead{1}=rand('Poisson',.3);
lslmusc{1}=rand('Poisson',0.5);
lsljoint{1}=rand('Poisson',0.2);
lslrash{1}=rand('Poisson',0.1);
lslchill{1}=rand('Poisson',0.3);
lslnaus{1}=rand('Poisson',0.2);
lsldizz{1}=rand('Poisson',0.1);

/*tempunit: because the CRF notes that the units are to be recorded, I'm setting a random 10% chance that the data are recorded in ferenheit.*/
array tunit{2} (0.9 .10);
	if first.visit then do; 
		
			dcstempu=rand("Table", of tunit{*});
			/*if tempu=2 then dcstempu='F';
			else if tempu=1 then dcstempu='C';*/
		end;		
if dcstempu=1 then do;/*Celcius*/
		
		lsltemp{1}=rand('Normal',36.57,0.42);
	end;
else if dcstempu=2 then do;/*Ferenheit*/
	lsltemp{1}=rand('Normal',97.8,0.76);
	/*based on Oral mean temps (in C) from Geneva,Cuzzo,Fazili 2019 systematic review 
			(https://academic.oup.com/ofid/article/6/4/ofz032/5435701?login=false)*/
end; 
/*temp*/
		/*because it was specifically designed this way, remember to randomize the temperature unit*/
		/*also note that participants should have a temperature taken after injection visits regardless
			of whether they have a symptom. 'no systematic reactions' comes later. */
do t=2 to 14;/*diary days 2 through 14*/
			s=t-1; 
	/*because there is no grading of the temperature events, i'm just generating randomly whether a temperature increases or decreases. 
		arguably this should correspond to active injection or not, but that would be faking data(lol). 
		Might make this a little more ingraned later after talking to study team*/
	
	transdir{t}=rand('Poisson', 0.5);
	if dcstempu=2 then do;
		If transdir{t} <=1 then do;
				lsltemp{t}=lsltemp{s}-0.86;
			end;
			else if transdir{t} in (2 ) then do;
				lsltemp{t}=lsltemp{s};
			end;
			else if transdir{t}>=3 then do;
				lsltemp{t}=lsltemp{s}+1.62;
			end;
	end;
	else if dcstempu=1 then do;
			If transdir{t}<=1 then do;
				lsltemp{t}=lsltemp{s}-0.47;
			end;
			else if transdir{t} in (2) then do;
				lsltemp{t}=lsltemp{s};
			end;
			else if transdir{t}>=3 then do;
				lsltemp{t}=lsltemp{s}+0.90;
			end;
	end;
	
		
end;


	

		
/*fatigue*/
do a=2 to 14;/*diary days 2 through 14*/
			b=a-1; 
			/*transition from day 1->2*/
		if b=1 then do;
				transdir{a}=rand('Poisson', 0.5); 
				if transdir{a}<=2 then lslfatig{a}=lslfatig{b};
			else if transdir{a}>2 then lslfatig{a}=lslfatig{b}+1;
			if lslfatig{a}<0 then lslfatig{a}=0;/*set so lslfatig{b}=0 will not result in negative number*/
		end;
			
	/*transition from day j->d for days 3 through 6*/
	if 2<a<=7 then transdir{a}=rand('Poisson', 0.5);/*sets the probability for decrease/same/increase for each D visit*/
	if 7<a<=14 then transdir{a} =rand('Poisson', 0.3);
	
		if transdir{a}<2 then do;/*decrease*/
		 lslfatig{a}=lslfatig{b}-1;/*if previous visit =1(ex:mild)*/
			if lslfatig{b} in (0) then lslfatig{a}=0;
				
		end;
		else if transdir{a} IN (2 3) then do;
			 lslfatig{a}=lslfatig{b};
		end;
		else if transdir{a}>3 then do;
			lslfatig{a}=lslfatig{b}+1; 
		end;

end;



/*headache*/
do c=2 to 14;/*diary days 2 through 14*/
			d=c-1; 
			/*transition from day 1->2*/
		if d=1 then do;
				transdir{c}=rand('Poisson', 0.5); 
				if transdir{c} in (1) then lslhead{c}=lslhead{d};
			else if transdir{c} in (2) then lslhead{c}=lslhead{d}+1;
			if lslhead{c}<0 then lslhead{c}=0;/*set so lslhead{d}=0 will not result in negative number*/
		end;
			
	/*transition from day j->d for days 3 through 6*/
	if 2<c<=7 then transdir{c}=rand('Poisson', 0.6);/*sets the probability for decrease/same/increase for each D visit*/
	if 7<c<=14 then transdir{c}= rand('Poisson', 0.4);
	
		if transdir{c}<2 then do;/*decrease*/
		 lslhead{c}=lslhead{d}-1;/*if previous visit =1(ex:mild)*/
			if lslhead{d} in (0) then lslhead{c}=0;
				
		end;
		else if transdir{c} in (2 3) then do;
			 lslhead{c}=lslhead{d};
		end;
		else if transdir{c}>3 then do;
			lslhead{c}=lslhead{d}+1; 
		end;

end;



/*muscleache*/

do e=2 to 14;/*diary days 2 through 14*/
			f=e-1; 
			/*transition from day 1->2*/
		if f=1 then do;
				transdir{e}=rand('Poisson', 0.6);
				if transdir{e} in (1) then lslmusc{e}=lslmusc{f};
			else if transdir{e} in (2) then lslmusc{e}=lslmusc{f}+1;
			if lslmusc{e}<0 then lslmusc{e}=0;/*set so lslmusc{f}=0 will not result in negative number*/
		end;
			
	/*transition from day j->d for days 3 through 6*/
	if 2<e<=7 then transdir{e}=rand('Poisson', 0.5);/*sets the probability for decrease/same/increase for each D visit*/
	if 7<e<=14 then transdir{e} =rand('Poisson', 0.4);
	
		if transdir{e}<=2 then do;/*decrease*/
		 lslmusc{e}=lslmusc{f}-1;/*if previous visit =1(ex:mild)*/
			if lslmusc{f} in (0) then lslmusc{e}=0;
				
		end;
		else if transdir{e}=3 then do;
			 lslmusc{e}=lslmusc{f};
		end;
		else if transdir{e}>3 then do;
			lslmusc{e}=lslmusc{f}+1; 
		end;

end;


/*jointpain*/
do g=2 to 14;/*diary days 2 through 14*/
			h=g-1; 
			/*transition from day 1->2*/
		if h=1 then do;
				transdir{g}=rand('Poisson', 0.7);
				if transdir{g} in (1) then lsljoint{g}=lsljoint{h};
			else if transdir{g} in (2) then lsljoint{g}=lsljoint{h}+1;
			if lsljoint{g}<0 then lsljoint{g}=0;/*set so lsljoint{h}=0 will not result in negative number*/
		end;
			
	/*transition from day j->d for days 3 through 6*/
	if 2<g<=7 then transdir{g}=rand('Poisson', 0.2);/*sets the probability for decrease/same/increase for each D visit*/
	if 7<g<=14 then transdir{g} =rand('Poisson', 0.1);
	
		if transdir{g}<2 then do;/*decrease*/
		 lsljoint{g}=lsljoint{h}-1;/*if previous visit =1(ex:mild)*/
			if lsljoint{h} in (0) then lsljoint{g}=0;
				
		end;
		else if transdir{g} in (2 3) then do;
			 lsljoint{g}=lsljoint{h};
		end;
		else if transdir{g}>3 then do;
			lsljoint{g}=lsljoint{h}+1; 
		end;

end;


/*rash*/
do i=2 to 14;/*diary days 2 through 14*/
			j=i-1; 
			/*transition from day 1->2*/
		if j=1 then do;
				transdir{i}=rand('Poisson', 0.5); 
				if transdir{i} in (1) then lslrash{i}=lslrash{j};
			else if transdir{i} in (2) then lslrash{i}=lslrash{j}+1;
			if lslrash{i}<0 then lslrash{i}=0;/*set so lslrash{j}=0 will not result in negative number*/
		end;
			
	/*transition from day j->d for days 3 through 6*/
	if 2<i<=7 then transdir{i}=rand('Poisson', 0.5);/*sets the probability for decrease/same/increase for each D visit*/
	if 7<i<=14 then transdir{i}= rand('Poisson', 0.6);
	
		if transdir{i}<2 then do;/*decrease*/
		 lslrash{i}=lslrash{j}-1;/*if previous visit =1(ex:mild)*/
			if lslrash{j} in (0) then lslrash{i}=0;				
		end;
		else if transdir{i}=2 then do;
			 lslrash{i}=lslrash{j};
		end;
		else if transdir{i}>2 then do;
			lslrash{i}=lslrash{j}+1; 
		end;
end;


/*chills*/
do k=2 to 14;/*diary days 2 through 14*/
			L=k-1; 
			/*transition from day 1->2*/
		if L=1 then do;
				transdir{K}=rand('Poisson', 0.5); 
				if transdir{K} in (1) then lslchill{k}=lslchill{L};
			else if transdir{K} in (2) then lslchill{k}=lslchill{L}+1;
			if lslchill{k}<0 then lslchill{k}=0;/*set so lslchill{L}=0 will not result in negative number*/
		end;
			
	/*transition from day j->d for days 3 through 6*/
	if 2<k<=7 then transdir{K}=rand('Poisson', 0.5);/*sets the probability for decrease/same/increase for each D visit*/
	if 7<k<=14 then transdir{K} =rand('Poisson', 0.5);
	
		if transdir{K}<2 then do;/*decrease*/
		 lslchill{k}=lslchill{L}-1;/*if previous visit =1(ex:mild)*/
			if lslchill{L} in (0) then lslchill{k}=0;				
		end;
		else if transdir{K} in (2 3) then do;
			 lslchill{k}=lslchill{L};
		end;
		else if transdir{K}>3 then do;
			lslchill{k}=lslchill{L}+1; 
		end;
end;


/*nausea*/
do m=2 to 14;/*diary days 2 through 14*/
			n=m-1; 
			/*transition from day 1->2*/
		if n=1 then do;
				transdir{m}=rand('Poisson', 0.5); 
				if transdir{m} in (1) then lslnaus{m}=lslnaus{n};
			else if transdir{m} in (2) then lslnaus{m}=lslnaus{n}+1;
			if lslnaus{m}<0 then lslnaus{m}=0;/*set so lslnaus{n}=0 will not result in negative number*/
		end;
			
	/*transition from day j->d for days 3 through 6*/
	if 2<m<=7 then transdir{m}=rand('Poisson', 0.4);/*sets the probability for decrease/same/increase for each D visit*/
	if 7<m<=14 then transdir{m} =rand('Poisson', 0.2);
	
		if transdir{m}<2 then do;/*decrease*/
		 lslnaus{m}=lslnaus{n}-1;/*if previous visit =1(ex:mild)*/
			if lslnaus{n} in (0) then lslnaus{m}=0;				
		end;
		else if transdir{m} in (2 3) then do;
			 lslnaus{m}=lslnaus{n};
		end;
		else if transdir{m}>3 then do;
			lslnaus{m}=lslnaus{n}+1; 
		end;
end;


/*dissiness*/
do o=2 to 14;/*diary days 2 through 14*/
			p=o-1; 
			/*transition from day 1->2*/
		if p=1 then do;
				transdir{o}=rand('Poisson', 0.7); 
				if transdir{o} in (1) then lsldizz{o}=lsldizz{p};
			else if transdir{o} in (2) then lsldizz{o}=lsldizz{p}+1;
			if lsldizz{o}<0 then lsldizz{o}=0;/*set so lsldizz{p}=0 will not result in negative number*/
		end;
			
	/*transition from day j->d for days 3 through 6*/
	if 2<o<=7 then transdir{o}=rand('Poisson', 0.4);/*sets the probability for decrease/same/increase for each D visit*/
	if 7<o<=14 then transdir{o} =rand('Poisson', 0.3);
	
		if transdir{o}<2 then do;/*decrease*/
		 lsldizz{o}=lsldizz{p}-1;/*if previous visit =1(ex:mild)*/
			if lsldizz{p} in (0) then lsldizz{o}=0;				
		end;
		else if transdir{o} in (2 3) then do;
			 lsldizz{o}=lsldizz{p};
		end;
		else if transdir{o}>3 then do;
			lsldizz{o}=lsldizz{p}+1; 
		end;
end;


/*took meds*/
		/*note that there is no variable for whether there is a temperature without medication. 
			there is no variable for what medication was taken. STRONGLY recommend changing this*/
			
run;


%macro transvar (data= , out1= , varset= ,out2= , setL= );
proc transpose data=&data out=&out1;
  by subjid visit;
  var &varset._day1-&varset._day14 ;
run;

data &out2;
  set &out1 (rename=(col1=&varset));
  day=input(substr(_name_, &setL), 5.);
  drop _name_;
run; 
proc sort data=&out2;by subjid visit day;run;
%mend;

proc transpose data=diarySyswide out=tempunit;
  by subjid visit;
  
  var dcstempu  ;
run;

data tempunitL;
set tempunit (rename=(col1=dcstempu));
day=1;
drop _name_;
run;


%transvar(data=diarySyswide , out1=transtemp1 , varset=dcstemp ,out2=tempL , setL=12);
%transvar(data=diarySyswide , out1=transfatigue1 , varset=dcsfatigue ,out2=fatigueL , setL=15);
%transvar(data=diarySyswide , out1=transheadache1 , varset=dcsheadache ,out2=headacheL , setL=16);
%transvar(data=diarySyswide , out1=muscleaches1 , varset=dcsmuscleaches ,out2=muscleachesL , setL=19);
%transvar(data=diarySyswide , out1=jointpain1 , varset=dcsjointpain ,out2=jointpainL , setL=17);
%transvar(data=diarySyswide , out1=rash1 , varset=dcsrash ,out2=rashL , setL=12);
%transvar(data=diarySyswide , out1=chills1 , varset=dcschills ,out2=chillsL , setL=14);
%transvar(data=diarySyswide , out1=nausea1 , varset=dcsnausea ,out2=nauseaL , setL=14);
%transvar(data=diarySyswide , out1=dizzi1 , varset=dcsdizzi ,out2=dizziL , setL=13);

data diarySystemic;
retain subjid visit day ;
	merge tempL tempunitL fatiguel headachel muscleachesl jointpainl rashl chillsl nauseal dizzil;
	by subjid visit day;

run;


proc sort data=diarySystemic;
by visit subjid day; 
run;

proc freq data=diarySystemic;
by visit;
table ( dcsfatigue dcsheadache dcsmuscleaches dcsjointpain dcsrash dcschills dcsnausea dcsdizzi)*day/norow nopercent;
footnote ;
run;


data mddat.diaryLocal;
set diarylng;
run;

 ods graphics /  width=8in ;
proc sgpanel data=diarylng ;
panelby  visit subjid/ novarname skipemptycells layout=lattice  sort=data  rows=6  ;
title height=14pt  "Induration Severity Grading" ;
series x=day y=dclindur / lineattrs=(color=CX708090 thickness=3);
rowaxis grid  gridattrs=(thickness=1 color=white) label="sympom severity grade" labelattrs=(size=12 weight=bold) values=(0 1 2 3 4) ; 
colaxis grid gridattrs=(thickness=1 color=white) label="diary card day" labelattrs=(size=12 weight=bold) values=(1 2 3 4 5 6 7 8 9 10 11 12 13 14 ) ;
footnote justify=right wrap "Synthetic data from iterative Poisson draws and transition matrix probabilities";
run;





data roundtst;
set diarysystemic;
dcstemp=round(dcstemp,0.1);

run;


data mddat.diarysystemic;
set diarysystemic;
rename day=dcsday;
dcstemp=round(dcstemp,0.1);
dcsnoinject=.;
run;

proc freq data=mddat.diarysystemic;
table dcstempu;
run;



proc sort data=mddat.diarysystemic;
by visit subjid day; 
run;

proc freq data=mddat.diarysystemic;
by visit;
table (dcsfatigue dcsheadache dcsjointpain dcsrash dcschills dcsnausea dcsdizzi)*day/norow nopercent;
footnote ;
run;

proc sort data=diarySystemic;by  visit subjid ;run;
proc sgplot data=diarySystemic;
by visit;
scatter x=subjid y=dcstemp_Day1;
yaxis label="day 1 tem" labelattrs=(size=12 weight=bold) values=(35.5 36 36.5 37 37.5 38 ) ;
run;

/*008/12/22*****
	Confirming updates and edits from Fengming and Heather*/
	
proc freq data=mddat.dcs_updatechk;
table dcstemp*dcstempu;
run;

data mddat.dcsfinal;
set mddat.dcs;
rename dclvisdat=dcsvisdat dclinjsite=dcsinjsite ;
array reactflg {8} dcsfatigue dcsheadache dcsmuscleaches dcsjointpain dcsrash dcschills dcsnausea dcsdizzi;

/*adjusting the data to follow implicit skip pattern with 'dcsnoreactdata'. 
	if a day on a diary card has no reaction data to enter, the clinical will select '1' for noreactdata
		and all other variables will be skipped, resulting in blank values*/
/*iterating over an array of symptoms for any values greater than 0*/	
valchk=sum(of reactflg(*));

if valchk<1 then dcsnoreactdata=1;

/*setting blanks for qualifying days*/
do i=1 to 8;
	if dcsnoreactdata=1 then reactflg{i}=.;
end;


count=0;
array miss_var {8} dcsfatigue dcsheadache dcsmuscleaches dcsjointpain dcsrash dcschills dcsnausea dcsdizzi;
do i = 1 to 8;
if miss_var{i}=. then count+1;
else count=count;
end; 

if count<8 then dcsnoreactdata=.;

drop valchk i j;

run;








